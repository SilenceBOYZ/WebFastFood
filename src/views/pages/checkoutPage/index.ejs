<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="shortcut icon"
      href="img/Pizza.png"
      alt="Logo cafe Misa"
      type="image/x-icon"
    />
    <title>Check your item - before payment 😊</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Coiny&family=Roboto:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.linearicons.com/free/1.0.0/svgembedder.min.js"></script>
    <link rel="stylesheet" href="css/style.css" />
  </head>
  <body >
    <% if(!userData) { %>
      <%- include("../../partials/header"); %> 
    <% } else { %>
      <%- include('../cart/partials/header', {user: userData, userCartSelected, totalCart}); %>
    <% } %>
    <%- include("../../partials/banner/banner",{title: "Check Out"}); %>
    <%- include("partials/main", {userCartSelected, totalCart, userData}); %>
    <%- include("../../partials/footer"); %>
    <%- include("../../partials/loginSite/loginSite") %>
    <script src="../js/scrollbar.js"></script>
    <script src="../js/loginSite.js"></script>
    <script src="../js/currencyTransport/formatCurrency.js"></script>
    <script src="js/validateNumber.js"></script>
    
    <script >
      const headerTotal = document.getElementById("HeaderTotalCartResult");
      headerTotal.textContent = formatCurrency(headerTotal.textContent);
    </script>

    <script>
      let showMessageError = (input, message) => {
        let parent = input.parentElement;
        let MessageError = parent.querySelector(".text-error-message");
        input.classList.add("input-active");
        MessageError.style.display = "inline-block";
        MessageError.innerText = message;
      }
      let showSucceed = (input) => {
        let parent = input.parentElement;
        let MessageError = parent.querySelector(".text-error-message");
        input.classList.remove("input-active");
        MessageError.style.display = "none";
      }

      let checkSelectOptions = (input) => {
        input.value = input.value.trim();
        if (input.value.length < 1) {
          showMessageError(input, `Vui lòng chọn hình thức thanh toán`);
          return true
        } 
        showSucceed(input);
        return false;
      }

      let checkInputEmptyError = (listInput) => {
        let isEmptyError = false;
        listInput.forEach(input => {
          input.value = input.value.trim();
          // Xóa khoảng trắng giữa hai đầu input
          if (!input.value) {
            isEmptyError = true;
            showMessageError(input, "Trường này không được để trống");
          } else {
            showSucceed(input);
          }
        });
      
        return isEmptyError;
      }

      const formPayment = document.getElementById("paymentForm");
      const name = document.getElementById("name");
      const phone = document.getElementById("phone");
      const address = document.getElementById("address");
      const payment = document.getElementById("payment");
      formPayment.onsubmit = (e) => {
        let isEmpty = checkInputEmptyError([name, phone, address, payment]);
        let isSelected = checkSelectOptions(payment);
        if(isEmpty || isSelected) {
          e.preventDefault(); 
        }
      }
    </script>
  </body>
</html>
